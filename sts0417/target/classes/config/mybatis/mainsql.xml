<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mainsql">

	<!-- 최근 책 불러오기 -->
	<select id="newBooks" resultType="net.bs.spring.BookinfoDTO">
		select * from (select rownum
		rn, bi.* from (select * from bookinfo order by bi_rdate desc) bi)
		where rn between 1 and 4
	</select>

	<!-- 이벤트 이미지 중복체크 -->
	<select id="checkImage" resultType="int">
		select count(*) from bs_event
		where image = #{image}
	</select>

	<!-- 이벤트 삽입 -->
	<insert id="insertEvent" parameterType="net.bs.spring.EventDTO">
		<!-- num number not null primary key, title varchar2(200) not null, url 
			varchar2(200) not null, image varchar2(200) not null, startdate date not 
			null, enddate date not null -->
		insert into bs_event values (bs_event_seq.nextval, #{title}, #{url},
		#{image}, to_date(#{startdate}, 'yyyy-mm-dd'), to_date(#{enddate},
		'yyyy-mm-dd'))
	</insert>

	<!-- 이벤트 개수 -->
	<select id="eventCount" resultType="int">
		select count(*) from bs_event
	</select>

	<!-- 이벤트 불러오기 -->
	<select id="getEvents" parameterType="net.bs.spring.EventDTO"
		resultType="net.bs.spring.EventDTO">
		select rn, num, title, url, image, to_char(startdate,
		'yyyy-mm-dd') as startdate, to_char(enddate, 'yyyy-mm-dd') as enddate
		from (select rownum rn, e.* from (select * from bs_event order by num
		desc) e) where rn between #{liststart} and #{listend}
	</select>
	
	<!-- 이벤트 삭제 -->
	<delete id="deleteEvent" parameterType="int">
		delete from bs_event where num = #{num}
	</delete>

	<!-- 메인화면 이벤트 불러오기 -->
	<select id="getMainEvents" resultType="net.bs.spring.EventDTO">
	<![CDATA[
		select rn, title, url, image from ( select rownum rn, e.* from (select * from bs_event where startdate <= sysdate and enddate >= sysdate) e) where rn <= 7
		]]>
	</select>

	<!-- 메인화면 이벤트 개수 (최대7) -->
	<select id="mainEventCount" resultType="int">
	<![CDATA[
		select count(*) from ( select rownum rn, e.* from (select * from bs_event where startdate <= sysdate and enddate >= sysdate) e) where rn <= 7
		]]>
	</select>

	<!-- 장바구니 항목 개수 가져오기 -->
	<select id="pickCount" resultType="int">
		select count(*) from bookcart
		where userid=#{userid}
	</select>

	<!-- BEST 상품 -->
	<select id="bestBooks" resultType="net.bs.spring.BookinfoDTO">
		<!-- 전체기간 -->
		select p.*, b.* from (select * from ( select rownum rn, t.* from (select count(p_bnum) as
		cnt, p_bnum from purchasedetail group by p_bnum order by cnt desc) t)
		where rn between 1 and 3) p join bookinfo b on p.p_bnum = b.bi_num
		<!-- 한달 전 select * from ( select rownum rn, t.* from ( select count(p_bnum) 
			as cnt, p_bnum from (select d.ordernum, d.p_bnum, p.buydate from purchasedetail 
			d join purchase p on d.ordernum = p.ordernum where p.buydate >= add_months(sysdate,-1)) 
			group by p_bnum order by cnt desc) t) where rn between 1 and 3; -->

		<!-- 일주일 전 select * from ( select rownum rn, t.* from ( select count(p_bnum) 
			as cnt, p_bnum from (select d.ordernum, d.p_bnum, p.buydate from purchasedetail 
			d join purchase p on d.ordernum = p.ordernum where p.buydate >= sysdate-1) 
			group by p_bnum order by cnt desc) t) where rn between 1 and 3; -->
	</select>

	<!-- 최근 댓글 2건 -->
	<select id="newReplies" resultType="net.bs.spring.BookinfoDTO">
		select * from (select rownum rn, br.* from (select b.bi_num, b.bi_title, b.bi_image, b.bi_writer, b.bi_publisher,
		r.r_content as bi_comment, r.r_stars as bi_stars from bsreply r join
		bookinfo b on r.bi_num = b.bi_num order by r.r_datetime desc) br) where rn
		between 1 and 2
	</select>
	
	<!-- 최근 공지사항 7건-->
	<select id="newNotice" resultType="net.bs.spring.LoginDTO">
		select * from (select rownum rn, n.* from (select * from notice order by notice_num desc) n) where rn between 1 and 7 
	</select>
</mapper>







